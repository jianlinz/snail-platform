#禁用全局flyway  使用自定义模块化flyway
spring.flyway.enabled=false

spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL57Dialect
spring.jpa.properties.hibernate.query.plan_cache_max_size=64
spring.jpa.properties.hibernate.query.plan_parameter_metadata_max_size=32
#禁用Hibernate openViewFilter
spring.jpa.open-in-view=false
spring.jpa.properties.hibernate.generate_statistics=false
#数据库类型
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
#驱动名称
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
# 初始化 连接数 及最大最小 连接数
spring.datasource.druid.initial-size=5
#最小连接池数量
spring.datasource.druid.min-idle=5
#最大连接池数量
spring.datasource.druid.maxActive=5
#获取连接时最大等待时间，单位毫秒。配置了maxWait之后，缺省启用公平锁，并发效率会有所下降，如果需要可以通过配置useUnfairLock属性为true使用非公平锁。
#spring.datasource.druid.maxWait=60000
spring.datasource.druid.useUnfairLock=true
#连接保持空闲而不被驱逐的最小时间
spring.datasource.druid.minEvictableIdleTimeMillis=30000
#用来检测连接是否有效的sql，要求是一个查询语句，常用select 'x'。如果validationQuery为null，testOnBorrow、testOnReturn、testWhileIdle都不会起作用。
spring.datasource.druid.validationQuery=SELECT 1 FROM DUAL
#建议配置为true，不影响性能，并且保证安全性。申请连接的时候检测，如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效。
spring.datasource.druid.testWhileIdle=true
spring.datasource.druid.timeBetweenEvictionRunsMillis=60000
#申请连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能。
spring.datasource.druid.testOnBorrow=true
#是否缓存preparedStatement，也就是PSCache。PSCache对支持游标的数据库性能提升巨大，比如说oracle。在mysql下建议关闭。
spring.datasource.druid.poolPreparedStatements=false
spring.datasource.druid.maxPoolPreparedStatementPerConnectionSize=20
#监控配置
spring.datasource.druid.filters=stat
spring.datasource.druid.connectionProperties=druid.stat.mergeSql\=true;druid.stat.slowSqlMillis\=5000
spring.datasource.druid.web-stat-filter.enabled=true
#spring.datasource.druid.web-stat-filter.url-pattern="/*"
spring.datasource.druid.web-stat-filter.exclusions="*.js,*.gif,*.jpg,*.bmp,*.png,*.css,*.ico,/druid/*"
spring.datasource.druid.stat-view-servlet.reset-enable=true
spring.datasource.druid.stat-view-servlet.login-username=admin
spring.datasource.druid.stat-view-servlet.login-password=admin123
spring.datasource.druid.stat-view-servlet.enabled=true

#输入日志sql
spring.datasource.druid.filter.commons-log.enabled=${sp.data.jpa.show-sql:false}
spring.datasource.druid.filter.commons-log.connection-log-enabled=false
spring.datasource.druid.filter.commons-log.data-source-log-enabled=false
spring.datasource.druid.filter.commons-log.result-set-log-enabled=false
spring.datasource.druid.filter.commons-log.statement-log-enabled=true
spring.datasource.druid.filter.commons-log.statement-sql-pretty-format=false
spring.datasource.druid.filter.commons-log.statement-log-error-enabled=true
spring.datasource.druid.filter.commons-log.statement-executable-sql-log-enable=true
spring.datasource.druid.filter.commons-log.statement-create-after-log-enabled=false
spring.datasource.druid.filter.commons-log.statement-close-after-log-enabled=false
spring.datasource.druid.filter.commons-log.statement-execute-after-log-enabled=false
spring.datasource.druid.filter.commons-log.statement-execute-batch-after-log-enabled=false
spring.datasource.druid.filter.commons-log.statement-execute-query-after-log-enabled=false
spring.datasource.druid.filter.commons-log.statement-execute-update-after-log-enabled=false
spring.datasource.druid.filter.commons-log.statement-parameter-clear-log-enable=false
spring.datasource.druid.filter.commons-log.statement-parameter-set-log-enabled=false
spring.datasource.druid.filter.commons-log.statement-prepare-after-log-enabled=false
spring.datasource.druid.filter.commons-log.statement-prepare-call-after-log-enabled=false

####liquibase
spring.liquibase.change-log=""